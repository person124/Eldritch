package com.person124.elrh;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.lang.reflect.Field;
import java.lang.reflect.Modifier;
import java.util.Arrays;
import java.util.Random;

import com.person124.elrh.events.NewPotionsEvent;
import com.person124.elrh.events.PlayerDisconnectEvent;
import com.person124.elrh.events.PlayerRightClickEntityEvent;
import com.person124.elrh.events.PlayerSyncingEvent;
import com.person124.elrh.events.WorldInitEvent;
import com.person124.elrh.handler.EldritchGuiHandler;
import com.person124.elrh.network.PacketHandler;
import com.person124.elrh.network.packet.EldritchPacketCloseBook;
import com.person124.elrh.network.packet.EldritchPacketGetRitual;
import com.person124.elrh.network.sync.EldritchPacketGodSync;
import com.person124.elrh.network.sync.EldritchPacketKnowledgeSync;
import com.person124.elrh.network.sync.EldritchPacketPlayerSync;

import net.minecraft.client.Minecraft;
import net.minecraft.client.renderer.entity.RenderItem;
import net.minecraft.creativetab.CreativeTabs;
import net.minecraft.potion.Potion;
import net.minecraftforge.common.MinecraftForge;
import net.minecraftforge.fml.common.FMLCommonHandler;
import net.minecraftforge.fml.common.Mod;
import net.minecraftforge.fml.common.Mod.EventHandler;
import net.minecraftforge.fml.common.Mod.Instance;
import net.minecraftforge.fml.common.event.FMLInitializationEvent;
import net.minecraftforge.fml.common.event.FMLPreInitializationEvent;
import net.minecraftforge.fml.common.network.NetworkRegistry;
import net.minecraftforge.fml.relauncher.Side;
import net.minecraftforge.fml.relauncher.SideOnly;

@Mod(modid = Eldritch.MODID, version = Eldritch.VERSION, name = Eldritch.NAME)
public class Eldritch {

	@Instance
	public static Eldritch instance = new Eldritch();

	public static final String MODID = "eldritch";
	public static final String VERSION = "0.148.0";
	public static final String NAME = "Eldritch";
	public static final Random RAND = new Random();
	public static final CreativeTabs TAB = new EldritchCreativeTab(MODID);

	@SideOnly(Side.CLIENT)
	public static RenderItem renderItem;
	public static boolean isClient;

	public static PacketHandler packetHandler;
	public static EldritchWorldSaveData worldData;

	@EventHandler
	public void preInit(FMLPreInitializationEvent event) {
		//Makes versioning easier
		if (event.getSide() == Side.CLIENT) {
			try {
				File f = new File("version.txt");
				BufferedReader reader = new BufferedReader(new FileReader(f));

				int i = Integer.valueOf(reader.readLine());
				i++;
				reader.close();

				f.delete();
				f.createNewFile();

				FileWriter writer = new FileWriter(f);
				writer.write(String.valueOf(i));
				writer.close();
			} catch (Exception e) {
				e.printStackTrace();
			}
		}

		event.getModMetadata().autogenerated = false;
		event.getModMetadata().name = NAME;
		event.getModMetadata().authorList = Arrays.asList("person124");
		event.getModMetadata().version = VERSION;
		event.getModMetadata().modId = MODID;

		allowNewPotions();

		MinecraftForge.EVENT_BUS.register(new WorldInitEvent());
		MinecraftForge.EVENT_BUS.register(new PlayerSyncingEvent());
		MinecraftForge.EVENT_BUS.register(new PlayerRightClickEntityEvent());
		MinecraftForge.EVENT_BUS.register(new NewPotionsEvent());

		FMLCommonHandler.instance().bus().register(new PlayerDisconnectEvent());

		NetworkRegistry.INSTANCE.registerGuiHandler(Eldritch.instance, new EldritchGuiHandler());
	}

	@EventHandler
	public void init(FMLInitializationEvent event) {
		if (event.getSide() == Side.CLIENT) renderItem = Minecraft.getMinecraft().getRenderItem();
		isClient = event.getSide() == Side.CLIENT;

		packetHandler = new PacketHandler(MODID);
		//Syning Packets
		packetHandler.registerPacket(EldritchPacketKnowledgeSync.class, new EldritchPacketKnowledgeSync.Handler(), Side.CLIENT);
		packetHandler.registerPacket(EldritchPacketGodSync.class, new EldritchPacketGodSync.Handler(), Side.CLIENT);
		packetHandler.registerBothPacket(EldritchPacketPlayerSync.class, new EldritchPacketPlayerSync.Handler());
		//Other
		packetHandler.registerBothPacket(EldritchPacketGetRitual.class, new EldritchPacketGetRitual.Handler());
		packetHandler.registerPacket(EldritchPacketCloseBook.class, new EldritchPacketCloseBook.Handler(), Side.CLIENT);

		ElrhBlocks.init();
		ElrhItems.init();
	}

	private void allowNewPotions() {
		Potion[] potionTypes = null;
		for (Field f : Potion.class.getDeclaredFields()) {
			f.setAccessible(true);
			try {
				if (f.getName().equals("potionTypes") || f.getName().equals("field_76425_a")) {
					Field modField = Field.class.getDeclaredField("modifiers");
					modField.setAccessible(true);
					modField.setInt(f, f.getModifiers() & ~Modifier.FINAL);

					potionTypes = (Potion[]) f.get(null);
					final Potion[] POTION_TYPES = new Potion[265];
					System.arraycopy(potionTypes, 0, POTION_TYPES, 0, potionTypes.length);
					f.set(null, POTION_TYPES);
				}
			} catch (Exception e) {
				e.printStackTrace();
			}
		}
	}

}
